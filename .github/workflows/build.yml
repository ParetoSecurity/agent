# Run all tests, linters, code analysis and other QA tasks on
# every push to master and PRs.
#
# To SSH into the runner to debug a failure, add the following step before
# the failing step
#       - uses: mxschmitt/action-tmate@v3
#         with:
#           install-dependencies: false

name: Build Tests

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

# Remove concurrency group to allow all matrix jobs to run without canceling
# concurrency:
#   group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
#   cancel-in-progress: false

jobs:
  windows:
    name: Windows Test of a Build
    runs-on: windows-latest
    needs: [ build ]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build
      - name: Display structure of downloaded files
        run: ls -R
      - name: Run Windows schema
        run: agent_windows_amd64_v1/paretosecurity schema > windows.json
      - name: Run Windows tests
        run: agent_windows_amd64_v1/paretosecurity check || true
      - name: Run Installer and Capture Screenshot
        run: |
          # Minimize all windows
          $shell = New-Object -ComObject "Shell.Application"
          $shell.MinimizeAll()
          # Start the installer in a new process
          Start-Process -FilePath "installer_windows_amd64_v1/paretosecurity-installer.exe" -ArgumentList "/QS" -NoNewWindow
          Start-Sleep -Seconds 5
          Add-Type -AssemblyName System.Windows.Forms
          $bitmap = New-Object Drawing.Bitmap([System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Width, [System.Windows.Forms.Screen]::PrimaryScreen.Bounds.Height)
          $graphics = [Drawing.Graphics]::FromImage($bitmap)
          $graphics.CopyFromScreen(0, 0, 0, 0, $bitmap.Size)
          $bitmap.Save("installer_screenshot.png")
        shell: pwsh
      - name: Upload Screenshot
        uses: actions/upload-artifact@v4
        with:
          name: installer-screenshot
          path: installer_screenshot.png
      - name: Upload Windows schema
        uses: actions/upload-artifact@v4
        with:
          path: windows.json
          name: windows.json
  linux:
    name: Linux Test of a Build
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build
      - name: Display structure of downloaded files
        run: ls -R
      - name: Make paretosecurity executable
        run: chmod +x agent_linux_amd64_v1/paretosecurity
      - name: Run Linux schema
        run: agent_linux_amd64_v1/paretosecurity schema > linux.json
      - name: Run Linux tests
        run: agent_linux_amd64_v1/paretosecurity check || true
      - name: Upload Linux schema
        uses: actions/upload-artifact@v4
        with:
          path: linux.json
          name: linux.json
  build:
    name: Unstable build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: stable
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: "~> v2"
          args: release --skip=publish --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        name: Upload build
        with:
          name: build
          path: dist
